---
- name: Install Docker and Docker Compose
  hosts: honeynet
  become: yes
  
  tasks:
    - name: Install prerequisites
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - python3-pip
        state: present
        update_cache: yes
    
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
    
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes
    
    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'
    
    - name: Install Python Docker module
      pip:
        name:
          - docker
          - docker-compose
    
    - name: Configure Docker daemon
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "10m",
              "max-file": "3"
            },
            "storage-driver": "overlay2",
            "userland-proxy": false,
            "live-restore": true,
            "default-ulimits": {
              "nofile": {
                "Name": "nofile",
                "Hard": 64000,
                "Soft": 64000
              }
            }
          }
      notify: restart docker
    
    - name: Create Docker network for data control
      docker_network:
        name: br-honeypot
        driver: bridge
        driver_options:
          com.docker.network.bridge.enable_ip_masquerade: "false"
    
    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: yes
    
    - name: Verify Docker installation
      command: docker --version
      register: docker_version
    
    - name: Display Docker version
      debug:
        msg: "Docker installed: {{ docker_version.stdout }}"
    
    - name: Verify Docker Compose installation
      command: docker-compose --version
      register: compose_version
    
    - name: Display Docker Compose version
      debug:
        msg: "Docker Compose installed: {{ compose_version.stdout }}"
  
  handlers:
    - name: restart docker
      systemd:
        name: docker
        state: restarted