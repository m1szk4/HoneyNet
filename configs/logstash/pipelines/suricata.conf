# Logstash Pipeline for Suricata IDS

input {
  file {
    path => "/input/suricata/eve.json"
    codec => "json"
    type => "suricata"
    start_position => "beginning"
    sincedb_path => "/usr/share/logstash/data/sincedb_suricata"
  }
}

filter {
  # Only process alerts
  if [event_type] != "alert" {
    drop { }
  }
  
  # Parse timestamp
  date {
    match => ["timestamp", "ISO8601"]
    target => "@timestamp"
  }
  
  # Anonymize source IP
  ruby {
    code => '
      require "openssl"
      salt = ENV["SALT_SECRET"] || "default_salt_change_me"
      src_ip = event.get("[src_ip]")
      if src_ip
        hash = OpenSSL::HMAC.hexdigest("SHA256", salt, src_ip)
        event.set("source_ip_anon", hash)
      end
    '
  }
  
  # GeoIP enrichment
  if [src_ip] {
    geoip {
      source => "src_ip"
      target => "geoip"
      fields => ["country_code2", "country_name", "asn"]
      tag_on_failure => ["_geoip_lookup_failure"]
    }
    
    if [geoip][country_code2] {
      mutate {
        add_field => { "country_code" => "%{[geoip][country_code2]}" }
      }
    }
    
    if [geoip][asn] {
      mutate {
        add_field => { "asn" => "%{[geoip][asn]}" }
      }
    }
  }
  
  # Extract MITRE ATT&CK from metadata
  if [alert][metadata] {
    ruby {
      code => '
        metadata = event.get("[alert][metadata]")
        if metadata.is_a?(Hash)
          mitre_id = metadata["mitre_technique_id"]
          event.set("mitre_technique", mitre_id) if mitre_id
        end
      '
    }
  }
  
  # Map MITRE technique to tactic
  if [mitre_technique] {
    # This is a simplified mapping - full mapping would be much longer
    if [mitre_technique] =~ /^T1595/ {
      mutate { add_field => { "mitre_tactic" => "Reconnaissance" } }
    } else if [mitre_technique] =~ /^T1078|^T1190/ {
      mutate { add_field => { "mitre_tactic" => "Initial Access" } }
    } else if [mitre_technique] =~ /^T1110/ {
      mutate { add_field => { "mitre_tactic" => "Credential Access" } }
    } else if [mitre_technique] =~ /^T1059/ {
      mutate { add_field => { "mitre_tactic" => "Execution" } }
    } else if [mitre_technique] =~ /^T1105/ {
      mutate { add_field => { "mitre_tactic" => "Command and Control" } }
    } else if [mitre_technique] =~ /^T1498/ {
      mutate { add_field => { "mitre_tactic" => "Impact" } }
    }
  }
  
  # Map severity
  if [alert][severity] == 1 {
    mutate { add_field => { "severity" => "critical" } }
  } else if [alert][severity] == 2 {
    mutate { add_field => { "severity" => "high" } }
  } else if [alert][severity] == 3 {
    mutate { add_field => { "severity" => "medium" } }
  } else {
    mutate { add_field => { "severity" => "low" } }
  }
  
  # Rename fields
  mutate {
    rename => {
      "[alert][signature]" => "alert_signature"
      "[alert][category]" => "alert_category"
      "[alert][signature_id]" => "signature_id"
      "[alert][rev]" => "revision"
      "src_port" => "source_port"
      "dest_port" => "dest_port"
      "dest_ip" => "dest_ip"
      "proto" => "protocol"
    }
  }
  
  # Extract payload
  if [payload_printable] {
    mutate {
      rename => { "payload_printable" => "payload" }
    }
  }
  
  # Convert types
  mutate {
    convert => {
      "source_port" => "integer"
      "dest_port" => "integer"
      "signature_id" => "integer"
      "revision" => "integer"
    }
  }
  
  # Remove sensi